/* tslint:disable */
/* eslint-disable */
/**
 * fk-mitou-2024
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists } from '../runtime';
import { Items, ItemsFromJSON, ItemsToJSON } from './Items';
import type { Latitude1 } from './Latitude1';
import { Latitude1FromJSON, Latitude1ToJSON } from './Latitude1';
import type { Longitude1 } from './Longitude1';
import { Longitude1FromJSON, Longitude1ToJSON } from './Longitude1';

/**
 *
 * @export
 * @interface PostUpdate
 */
export interface PostUpdate {
  /**
   *
   * @type {}
   * @memberof PostUpdate
   */
  items?: Items | null;
  /**
   *
   * @type {Latitude1}
   * @memberof PostUpdate
   */
  latitude?: Latitude1 | null;
  /**
   *
   * @type {Longitude1}
   * @memberof PostUpdate
   */
  longitude?: Longitude1 | null;
}

/**
 * Check if a given object implements the PostUpdate interface.
 */
export function instanceOfPostUpdate(value: object): boolean {
  let isInstance = true;

  return isInstance;
}

export function PostUpdateFromJSON(json: any): PostUpdate {
  return PostUpdateFromJSONTyped(json, false);
}

export function PostUpdateFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): PostUpdate {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    items: !exists(json, 'items') ? undefined : ItemsFromJSON(json['items']),
    latitude: !exists(json, 'latitude')
      ? undefined
      : Latitude1FromJSON(json['latitude']),
    longitude: !exists(json, 'longitude')
      ? undefined
      : Longitude1FromJSON(json['longitude']),
  };
}

export function PostUpdateToJSON(value?: PostUpdate | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    items: ItemsToJSON(value.items),
    latitude: Latitude1ToJSON(value.latitude),
    longitude: Longitude1ToJSON(value.longitude),
  };
}
